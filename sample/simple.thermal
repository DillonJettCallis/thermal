import dom/dom::{ Html, head, tag, text, content, Element, style, onClick };

data Status {
  state: Boolean
}

implement Status {

  fun reset(self: Status): Boolean {
    return self.state;
  }

}

data Counter {
  count: Int
}

implement Counter {
  sig increment(var self: Counter): Unit {
    self.count += 1;
  }
}

def main(): Html {
  var reset = Status { state: false }

  return Html {
    head: head('Button Test'),
    body: tag('body', [
      content([
        clickCounter(reset, reset.state)
      ])
    ]),
  }
}


def clickCounter(status: Status, var resetter: Boolean): Element {
  var counter = Counter{ count: 0 };

  tag('div', [
    style('
      display: flex;
      flex-direction: row;
      gap: 10px;
    '),
    content([
      label(toString(counter.count)),
      tag('button', [
        onClick(sig { => counter.increment(); true }),
        content([text('Click here')]),
      ]),
      tag('button', [
        onClick(sig { => val oldState = status.reset(); resetter = !oldState; true }),
        content([text('Reset')]),
      ])
    ])
  ])
}

fun label(str: String): Element {
  return tag('label', [content([text(str)])]);
}

